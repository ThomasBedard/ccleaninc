// plugins {
//     id 'java'
//     id 'org.springframework.boot' version '3.4.0'
//     id 'io.spring.dependency-management' version '1.1.6'
//     id 'jacoco'
// }

// group = 'com.ccleaninc'
// version = '0.0.1-SNAPSHOT'

// java {
//     toolchain {
//         languageVersion = JavaLanguageVersion.of(17)
//     }
// }

// configurations {
//     compileOnly {
//         extendsFrom annotationProcessor
//     }
// }

// repositories {
//     mavenCentral()
// }

// ext {
//     mapstructVersion = "1.5.3.Final"
//     lombokVersion = "1.18.26"
//     lombokMapstructBindingVersion = "0.2.0"
// }

// dependencies {
//     implementation 'com.itextpdf:itextpdf:5.5.13.2'
//     implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//     implementation 'org.springframework.boot:spring-boot-starter-web'
//     implementation "org.mapstruct:mapstruct:${mapstructVersion}"
//     compileOnly 'org.projectlombok:lombok'
//     developmentOnly 'org.springframework.boot:spring-boot-devtools'
//     runtimeOnly 'com.mysql:mysql-connector-j'
//     annotationProcessor 'org.projectlombok:lombok'
//     compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
//     annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
//     testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
//     testImplementation 'org.springframework.boot:spring-boot-starter-test'
//     testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
// }

// jacoco {
//     toolVersion = "0.8.10"
// }

// jacocoTestReport {
//     dependsOn test

//     afterEvaluate {
//         classDirectories.setFrom(files(classDirectories.files.collect {
//             fileTree(dir: it, exclude: [
//                     //"com/movielister/**/MovieDetailsServiceApplication.class",
//                     // "**/*MapperImpl.class"
//             ])
//         }))
//     }
// }

// jacocoTestCoverageVerification {
//     violationRules {
//         rule {
//             limit {
//                 minimum = 0.00
//             }
//         }
//     }
// }

// test.finalizedBy jacocoTestReport
// check.dependsOn jacocoTestCoverageVerification

// test {
//     useJUnitPlatform()
//     testLogging {
//         events "passed", "skipped", "failed"
//     }
// }

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.ccleaninc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.26"
    lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
    implementation 'com.itextpdf:itextpdf:5.5.13.2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", 
                        "org.projectlombok:lombok:${lombokVersion}", 
                        "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Spring Boot test starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation('org.apache.httpcomponents:httpclient:4.5.14')
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                // Exclude any classes you donâ€™t want included in coverage, for example:
                // "**/*MapperImpl.class"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
